package io.vamani.application.db2.repository;

import io.vamani.application.db2.domain.Viewcostanalysisselectionics;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import javax.persistence.PersistenceContext;
import java.util.List;

@SuppressWarnings("unused")
@Repository
@Transactional("db2TransactionManager")
@PersistenceContext(name = "db2EntityManagerFactory")
public interface ViewcostanalysisselectionicsRepository extends JpaRepository<Viewcostanalysisselectionics, Viewcostanalysisselectionics> {
    @Query(value = "SELECT VS1.FATHERPRODUCTCODE, nvl(VS1.WORKATTRIBUTES,'')WORKATTRIBUTES, VS1.ITEMNATURE,"
        +" NVL(VS1.ITEMTYPECODE, '') ITEMTYPECODE, VS1.ITEMSUBCODE01, VS1.ITEMSUBCODE02, VS1.ITEMSUBCODE03, VS1.ITEMSUBCODE04, VS1.ITEMSUBCODE05,"
        +" VS1.ITEMSUBCODE06, VS1.ITEMSUBCODE07, VS1.ITEMSUBCODE08, VS1.ITEMSUBCODE09, VS1.ITEMSUBCODE10, NVL(VS1.ITEMDESCRIPTION,'') DESCRIPTION,"
        +" NVL(VS1.UOMCODE, '') UOMCODE, COALESCE(SUM(NVL(VS1.MULTIPLEQUANTITY,0)), 0) COSTLINE, SUM(NVL(VS1.EXPQTYREQD,0)) REQQTY, 0 PRICE"
        +" FROM VIEWCOSTANALYSISSELECTIONICS VS1"
        +" WHERE  (VS1.SALORDLINESALORDERCOMPANYCODE, VS1.SALORDLINESALORDERCOUNTERCODE, VS1.SALESORDERLINESALESORDERCODE, VS1.SALESORDERLINEORDERLINE, VS1.SALESORDERLINEORDERSUBLINE, VS1.SALORDLINECOMPONENTORDERLINE, VS1.APPROVALDATE, VS1.COSTSHEETNO)"
        +" IN(SELECT VS.SALORDLINESALORDERCOMPANYCODE, VS.SALORDLINESALORDERCOUNTERCODE, VS.SALESORDERLINESALESORDERCODE, VS.SALESORDERLINEORDERLINE, VS.SALESORDERLINEORDERSUBLINE, VS.SALORDLINECOMPONENTORDERLINE, VS.APPROVALDATE, VS.COSTSHEETNO  FROM VIEWCOSTANALYSISSELECTIONICS VS WHERE VS.PROJECTCODE='GXXRW' AND VS.APPROVALDATE IS NOT NULL ORDER BY VS.APPROVALDATE, VS.SALESORDERLINESALESORDERCODE, VS.SALESORDERLINEORDERLINE, VS.SALESORDERLINEORDERSUBLINE FETCH FIRST ROW ONLY) AND VS1.FATHERPRODUCTCODE IN('CPT', 'SEG', 'PKG') AND VS1.ITEMNATURE='C' AND VS1.PRODUCED=0"
        +" GROUP BY VS1.FATHERPRODUCTCODE, VS1.WORKATTRIBUTES, VS1.ITEMNATURE,"
        +" VS1.ITEMSUBCODE01, VS1.ITEMSUBCODE02, VS1.ITEMSUBCODE03, VS1.ITEMSUBCODE04, VS1.ITEMSUBCODE05,"
        +" VS1.ITEMSUBCODE06, VS1.ITEMSUBCODE07, VS1.ITEMSUBCODE08, VS1.ITEMSUBCODE09, VS1.ITEMSUBCODE10, NVL(VS1.ITEMDESCRIPTION,''),"
        +" NVL(VS1.ITEMTYPECODE, ''),  NVL(VS1.UOMCODE, ''), VS1.FATHERITEMCODE"
        +" ORDER BY  CASE WHEN VS1.FATHERPRODUCTCODE = 'WGF' THEN 1 WHEN VS1.FATHERPRODUCTCODE = 'WPF' THEN 2 WHEN VS1.FATHERPRODUCTCODE = 'ACC' THEN 3"
        +" WHEN VS1.FATHERPRODUCTCODE = 'CPT' THEN 4 WHEN VS1.FATHERPRODUCTCODE = 'SEG' THEN 5 WHEN VS1.FATHERPRODUCTCODE = 'PKG' THEN 6 END,"
        +" VS1.FATHERPRODUCTCODE, VS1.WORKATTRIBUTES, CASE WHEN VS1.ITEMNATURE='1' THEN 1 ELSE 2 END", nativeQuery = true)
    List<Object[]> findAllByProjectcode(String projectcode);

    @Query(value = "SELECT VS1.FATHERPRODUCTCODE, VS1.WORKATTRIBUTES, VS1.ITEMNATURE,"
        +" NVL(VS1.ITEMTYPECODE, '') ITEMTYPECODE, VS1.ITEMSUBCODE01, VS1.ITEMSUBCODE02, VS1.ITEMSUBCODE03, VS1.ITEMSUBCODE04, VS1.ITEMSUBCODE05,"
        +" VS1.ITEMSUBCODE06, VS1.ITEMSUBCODE07, VS1.ITEMSUBCODE08, VS1.ITEMSUBCODE09, VS1.ITEMSUBCODE10, NVL(VS1.ITEMDESCRIPTION,'') DESCRIPTION,"
        +" NVL(VS1.UOMCODE, '') UOMCODE, COALESCE(SUM(NVL(VS1.MULTIPLEQUANTITY,0)), 0) COSTLINE, SUM(NVL(VS1.EXPQTYREQD,0)) REQQTY, 0 PRICE"
        +" FROM VIEWCOSTANALYSISSELECTIONICS VS1"
        +" WHERE  (VS1.SALORDLINESALORDERCOMPANYCODE, VS1.SALORDLINESALORDERCOUNTERCODE, VS1.SALESORDERLINESALESORDERCODE, VS1.SALESORDERLINEORDERLINE, VS1.SALESORDERLINEORDERSUBLINE, VS1.SALORDLINECOMPONENTORDERLINE, VS1.APPROVALDATE, VS1.COSTSHEETNO)"
        +" IN(SELECT VS.SALORDLINESALORDERCOMPANYCODE, VS.SALORDLINESALORDERCOUNTERCODE,"
        +" VS.SALESORDERLINESALESORDERCODE, MIN(VS.SALESORDERLINEORDERLINE), MIN(VS.SALESORDERLINEORDERSUBLINE), MIN(VS.SALORDLINECOMPONENTORDERLINE), MIN(VS.APPROVALDATE), MIN(VS.COSTSHEETNO)"
        +" FROM VIEWCOSTANALYSISSELECTIONICS VS"
        +" WHERE VS.PROJECTCODE=?1 AND VS.APPROVALDATE IS NOT NULL"
        +" GROUP BY VS.SALORDLINESALORDERCOMPANYCODE, VS.SALORDLINESALORDERCOUNTERCODE,"
        +" VS.SALESORDERLINESALESORDERCODE) AND VS1.FATHERPRODUCTCODE IN('WGF', 'WPF', 'CPT', 'SEG', 'PKG') AND VS1.ITEMNATURE<>'C'" // AND VS1.PRODUCED=0
        +" GROUP BY VS1.FATHERPRODUCTCODE, VS1.WORKATTRIBUTES, VS1.ITEMNATURE,"
        +" VS1.ITEMSUBCODE01, VS1.ITEMSUBCODE02, VS1.ITEMSUBCODE03, VS1.ITEMSUBCODE04, VS1.ITEMSUBCODE05,"
        +" VS1.ITEMSUBCODE06, VS1.ITEMSUBCODE07, VS1.ITEMSUBCODE08, VS1.ITEMSUBCODE09, VS1.ITEMSUBCODE10, NVL(VS1.ITEMDESCRIPTION,''),"
        +" NVL(VS1.ITEMTYPECODE, ''),  NVL(VS1.UOMCODE, ''), VS1.FATHERITEMCODE"
        +" ORDER BY  CASE WHEN VS1.FATHERPRODUCTCODE = 'WGF' THEN 1 WHEN VS1.FATHERPRODUCTCODE = 'WPF' THEN 2 WHEN VS1.FATHERPRODUCTCODE = 'ACC' THEN 3"
        +" WHEN VS1.FATHERPRODUCTCODE = 'CPT' THEN 4 WHEN VS1.FATHERPRODUCTCODE = 'SEG' THEN 5 WHEN VS1.FATHERPRODUCTCODE = 'PKG' THEN 6 END,"
        +" VS1.FATHERPRODUCTCODE, VS1.WORKATTRIBUTES, CASE WHEN VS1.ITEMNATURE='1' THEN 1 ELSE 2 END", nativeQuery = true)
    List<Object[]> findAllAvgByProjectcode(String projectcode);

    /* @Query(value = "SELECT VS.EXPQTYREQD FROM VIEWCOSTANALYSISSELECTIONICS VS WHERE"
        +" VS.PROJECTCODE=?1 AND"
        +" NVL(VS.ITEMSUBCODE01, '') = ?2 AND"
        +" NVL(VS.ITEMSUBCODE02, '') = ?3 AND"
        +" NVL(VS.ITEMSUBCODE03, '') = ?4 AND"
        +" NVL(VS.ITEMSUBCODE04, '') = ?5 AND"
        +" NVL(VS.ITEMSUBCODE05, '') = ?6 AND"
        +" NVL(VS.ITEMSUBCODE06, '') = ?7 AND"
        +" NVL(VS.ITEMSUBCODE07, '') = ?8 AND"
        +" NVL(VS.ITEMSUBCODE08, '') = ?9 AND"
        +" NVL(VS.ITEMSUBCODE09, '') = ?10 AND"
        +" NVL(VS.ITEMSUBCODE10, '') = ?11 AND VS.APPROVALDATE IS NOT NULL"
        +" ORDER BY VS.COSTSHEETNO FETCH FIRST ROW ONLY", nativeQuery = true)
    Double findAllAvgByProjectcodeAndItem(String projectcode, String subcode01, String subcode02, String subcode03, String subcode04, String subcode05, String subcode06, String subcode07, String subcode08, String subcode09, String subcode10);*/

    @Query(value = "SELECT QUANTITYPER FROM BOMCOMPONENT BOM WHERE BILLOFMATERIALITEMTYPECODE IN ('CPT', 'HFC') AND BILLOFMATERIALSUBCODE01 IN(SELECT MAX(SUBCODE01) FROM SALESORDERLINE WHERE PROJECTCODE=?) AND SUBCODE01=? AND SUBCODE02=? AND"
        +" SUBCODE03=? AND SUBCODE04=? AND SUBCODE05=? AND SUBCODE06=? AND SUBCODE07=? AND SUBCODE08=? FETCH FIRST ROW ONLY", nativeQuery = true)
    Double findAllAvgByProjectcodeAndItem(String projectcode, String subcode01, String subcode02, String subcode03, String subcode04, String subcode05, String subcode06, String subcode07, String subcode08, String subcode09, String subcode10);


}
